name: Pull Request

on:
  pull_request:
    branches:
      - main
    paths:
      - helm/k10app/**

jobs:
  validate:
    name: Validate changes
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4.6.1
        with:
          python-version: "3.x"

      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest

      - name: Install Helm Docs
        run: |
          set -euo pipefail
          curl -L https://github.com/norwoodj/helm-docs/releases/download/v1.11.0/helm-docs_1.11.0_Linux_x86_64.tar.gz | tar -xz --directory /usr/local/bin helm-docs
          chmod +x /usr/local/bin/helm-docs

      - name: Install Artifact Hub CLI
        run: |
          set -euo pipefail
          curl -L https://github.com/artifacthub/hub/releases/download/v1.11.0/ah_1.11.0_linux_amd64.tar.gz | tar -xz --directory /usr/local/bin ah
          chmod +x /usr/local/bin/ah

      - name: Install Kubeconform
        run: |
          set -euo pipefail
          curl -L https://github.com/yannh/kubeconform/releases/download/v0.5.0/kubeconform-linux-amd64.tar.gz | tar -xz --directory /usr/local/bin kubeconform
          chmod +x /usr/local/bin/kubeconform

      - name: Install chart-testing
        uses: helm/chart-testing-action@e8788873172cb653a90ca2e819d79d65a66d4e76 # v2.4.0

      - name: Configure Helm
        run: helm repo add bitnami https://charts.bitnami.com/bitnami/

      # - name: Run Helm Docs check
      #   run: |
      #     set -euo pipefail
      #     helm-docs
      #     if [[ -n "$(git status --porcelain --untracked-files=no)" ]]
      #     then
      #       echo "Documentation not up to date. Please run helm-docs and commit changes!" >&2
      #       exit 1
      #     fi

      - name: Run Artifact Hub lint
        run: ah lint --kind helm || exit 1

      - name: Run chart-testing lint
        run: ct lint --target-branch=main --chart-dirs=helm --check-version-increment=false

      - name: Run Kubeconform
        run: |
          set -euo pipefail

          values="./helm/k10app/ci/kubeconform.yaml"
          if [[ ! -f "${values}" ]]
          then
            values="./helm/k10app/test-values.yaml"
            touch "${values}"
          fi

          k8s_version_stable="$(curl -sL https://dl.k8s.io/release/stable.txt | grep -Eo '[0-9]+\.[0-9]+')"
          k8s_versions_in="${{ var.K8S_VERSIONS }}"
          k8s_versions="${k8s_versions_in:-$k8s_version_stable}"
          for k8s_version in ${k8s_versions//,/ }
          do
            echo "Chart: k10app, K8s: ${k8s_version}"
            helm template --kube-version "${k8s_version}" "./helm/k10app" --values "${values}" | kubeconform --kubernetes-version "${k8s_version}" --schema-location default --schema-location 'https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json' --strict --summary
          done

      - name: Create Kind cluster
        uses: helm/kind-action@fa81e57adff234b2908110485695db0f181f3c67 # v1.7.0

      - name: Run chart-testing install
        run: ct install --target-branch=main --chart-dirs=helm --helm-extra-args="--timeout 600s"
