name: Commit

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - helm/k10app/Chart.yaml
jobs:
  release:
    name: Release chart
    permissions: 
      contents: write
      id-token: write
      packages: write
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0

      - name: Install Crane
        uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # v0.1

      - name: Install Cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # v3.0.1

      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest

      - name: Install chart-releaser
        uses: helm/chart-releaser-action@be16258da8010256c6e82849661221415f031968 # v1.5.0
        with:
          install_only: true

      - name: Install ORAS
        run: |
          set -euo pipefail
          curl -L https://github.com/oras-project/oras/releases/download/v0.16.0/oras_0.16.0_linux_amd64.tar.gz | tar -xz --directory /usr/local/bin oras
          chmod +x /usr/local/bin/oras

      - name: Install yq
        run: |
          set -euo pipefail
          curl -Lo /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.30.8/yq_linux_amd64
          chmod +x /usr/local/bin/yq

      - name: Configure Git
        run: |
          set -euo pipefail
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Configure Helm
        run: helm repo add bitnami https://charts.bitnami.com/bitnami/

      - name: Get chart version
        id: chart_version
        run: |
          set -euo pipefail
          echo "version=$(yq eval '.version' './helm/k10app/Chart.yaml')" >> $GITHUB_OUTPUT

      - name: Get changelog entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@b97ce03a10d9bdbb07beb491c76a5a01d78cd3ef # v2.2.2
        with:
          path: ./helm/k10app/CHANGELOG.md
          version: "v${{ steps.chart_version.outputs.version }}"

      - name: Create release notes
        run: |
          set -euo pipefail
          cat <<"EOF" > ./helm/k10app/RELEASE.md
          ${{ steps.changelog_reader.outputs.changes }}
          EOF

      - name: Release chart
        id: release
        run: |
          set -euo pipefail

          package_dir="./.cr-release-packages"
          index_dir="./.cr-index"

          mkdir -p "${package_dir}" "${index_dir}"

          cr package --package-path="${package_dir}" ./helm/k10app

          cr upload --token=${{ secrets.GITHUB_TOKEN }} --owner=${{ github.repository_owner }} --git-repo=${{ github.event.repository.name }} --package-path="${package_dir}" --release-notes-file=RELEASE.md --make-release-latest=true

          cr index --token=${{ secrets.GITHUB_TOKEN }} --push --owner=${{ github.repository_owner }} --git-repo=${{ github.event.repository.name }} --package-path="${package_dir}" --index-path="${index_dir}/index.yaml"

          echo "path=${package_dir}/k10app-${{ steps.chart_version.outputs.version }}.tgz" >> $GITHUB_OUTPUT

      - name: Login to OCI registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure OCI repository
        run: |
          set -euo pipefail

          oci_registry="ghcr.io"
          oci_repository="${oci_registry}/${{ github.repository_owner	}}/charts/k10app"

          oras login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} "${oci_registry}"
          oras push "${oci_repository}:artifacthub.io" "./helm/k10app/artifacthub-repo.yml:application/vnd.cncf.artifacthub.repository-metadata.layer.v1.yaml"

      - name: Push chart to OCI repository
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          set -euo pipefail

          oci_registry="ghcr.io"
          oci_repository_prefix="${oci_registry}/${{ github.repository_owner }}/charts"
          oci_repository="${oci_repository_prefix}/k10app"
          oci_image="${oci_repository}:${{ steps.chart_version.outputs.version }}"

          helm registry login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} "${oci_registry}"
          helm push ${{ steps.release.outputs.path }} "oci://${oci_repository_prefix}"

          digest="$(crane digest "${oci_image}")"
          cosign sign --yes "${oci_image}@${digest}"
