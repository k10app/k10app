apiVersion: v1
data:
  MONGODB_HOST: mongo-mongodb-0.mongo-mongodb-headless.{{ .Release.Namespace }}.svc.cluster.local
  MONGODB_USER: root
  ROUTE_PREFIX: {{.Values.routingPrefix}}/catalog
kind: ConfigMap
metadata:
  name: catalog-configuration
  labels:
    {{- include "k10app.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: catalog
    {{- include "k10app.labels" . | nindent 4 }}
  name: catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: catalog
        {{- include "k10app.labels" . | nindent 8 }}
    spec:
      initContainers:
      - name: port-check
        image: alpine
        command: ['sh', '-c','CNT=20;while [ $CNT -gt 0 ]; do echo -n "Try $CNT : "; nc -z mongo-mongodb-0.mongo-mongodb-headless.{{ .Release.Namespace }}.svc.cluster.local 27017 && break;CNT=$(($CNT-1)); echo "no connection, sleeping 5s"; sleep 5;done']
      containers:
      - image: ghcr.io/k10app/catalog
        name: catalog
        envFrom:
        - configMapRef:
            name: catalog-configuration
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongo-mongodb
        volumeMounts:
        - name: catalog-init
          mountPath: /catalog/init
      volumes:
      - name: catalog-init
        configMap:
          name: catalog-init
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: catalog
    {{- include "k10app.labels" . | nindent 4 }}
  name: catalog
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: catalog
  type: ClusterIP
---