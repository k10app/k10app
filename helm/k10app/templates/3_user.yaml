apiVersion: v1
data:
  MARIADB_HOST: mysql.{{ .Release.Namespace }}.svc.cluster.local
  MARIADB_USER: root
  MARIADB_DATABASE: userdb
  ROUTE_PREFIX: {{.Values.routingPrefix}}/user
kind: ConfigMap
metadata:
  name: basicuserservice-configuration
  labels:
    {{- include "k10app.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: basicuserservice
    {{- include "k10app.labels" . | nindent 4 }}
  name: basicuserservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basicuserservice
  strategy: {}
  template:
    metadata:
      labels:
        {{- include "k10app.labels" . | nindent 8 }}
        app: basicuserservice
    spec:
      initContainers:
      - name: port-check
        image: alpine
        command: ['sh', '-c','CNT=20;while [ $CNT -gt 0 ]; do echo -n "Try $CNT : "; nc -z mysql.{{ .Release.Namespace }}.svc.cluster.local 3306 && break;CNT=$(($CNT-1)); echo "no connection, sleeping 5s"; sleep 5;done']
      containers:
      - image: ghcr.io/k10app/basicuserservice 
        name: basicuserservice
        envFrom:
        - configMapRef:
            name: basicuserservice-configuration
        env:
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-root-password
              name: mysql
        volumeMounts:
        - mountPath: /basicuserservice/certificates
          name: buskeys
      imagePullSecrets:
      - name: regcred       
      volumes:
      - name: buskeys
        secret:
          secretName: buskeys
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: basicuserservice 
    {{- include "k10app.labels" . | nindent 4 }}
  name: basicuserservice 
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: basicuserservice 
  type: ClusterIP